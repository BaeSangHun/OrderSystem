<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="statistics">

	<resultMap type="ExerciseContents" id="ExerciseContents">
		<result property="ExerciseContentsCode"
			column="Exercise_contents_code" />
		<result property="ExerciseSet" column="Exercise_set" />
		<result property="ExerciseReps" column="Exercise_reps" />
		<result property="ExerciseLb" column="Exercise_lb" />
	</resultMap>

	<resultMap type="ExerciseJournal" id="EJMap">
		<id property="ExerciseCode" column="exercise_code"></id>
		<result property="ExerciseName" column="Exercise_name" />
		<result property="start" column="Exercise_date" />
		<collection property="details" resultMap="ExerciseContents" />
	</resultMap>

	<select id="getLatestLog" resultType="MessageRepository">
		select a.log_num,a.manager,a.username,a.done_subject,a.done_content,a.kinds,
			case 
			when hour(timediff(now(),a.log_time))<![CDATA[ < 1]]> THEN concat(minute(timediff(now(),a.log_time)), '분전')
			when hour(timediff(now(),a.log_time))<![CDATA[ < 24 ]]>THEN concat(minute(timediff(now(),a.log_time)), '시간전')
			else concat(datediff(now(),a.log_time),'일전')end as log_time 
		from assignment_log a 
		where manager = #{id}
		order by a.log_time desc;
	</select>
	
	<select id="todayList" resultMap="EJMap">
		SELECT
		ei.Exercise_date,et.Exercise_name,ec.Exercise_contents_code,
		ec.Exercise_set,ec.Exercise_reps,ec.Exercise_lb
		FROM exercise_title et JOIN exercise_item ei 
		JOIN exercise_contents ec
		ON et.Exercise_title_code =
		ec.Exercise_title_code AND et.Exercise_code = ei.exercise_code
		WHERE ei.id = #{id} AND ei.Exercise_date = curdate()
	</select>
	
	<select id="monthExerList" resultMap="EJMap">
		SELECT
		ei.Exercise_date,et.Exercise_name,ec.Exercise_contents_code,
		ec.Exercise_set,ec.Exercise_reps,ec.Exercise_lb
		FROM exercise_title et JOIN exercise_item ei 
		JOIN exercise_contents ec
		ON et.Exercise_title_code =
		ec.Exercise_title_code AND et.Exercise_code = ei.exercise_code
		WHERE ei.id = #{id} AND ei.Exercise_date between DATE_SUB(curdate(), INTERVAL 30 DAY) AND curdate()
	</select>
	
	<select id="getWeight" resultType="ExerciseJournal">
		SELECT
		ei.Exercise_date start,ei.userWeight
		FROM exercise_item ei,(select max(exercise_item.Exercise_date) as recently from exercise_item group by exercise_item.Exercise_date) as ei2 
		WHERE ei.id = #{id} and ei.Exercise_date = ei2.recently
	</select>
	
	<select id="getAvgLb" resultType="ExerciseJournal">
		SELECT 
		 mytable.Exercise_date start
			,mytable.Exercise_name
			,ROUND(AVG(mytable.Exercise_lb),1) avgLb,SUM(mytable.Exercise_reps) sumReps,count(mytable.Exercise_set) doneSet,
			ROUND((MAX(mytable.Exercise_lb) * (1+MAX(mytable.reps)/30)),1) oneRm
		FROM (SELECT 
				ei.Exercise_date,et.Exercise_name,ec.Exercise_contents_code,
				ec.Exercise_set,ec.Exercise_reps,ec.Exercise_lb,
				(SELECT ab.Exercise_reps FROM exercise_contents ab WHERE ab.exercise_lb = ec.Exercise_lb AND ab.exercise_contents_code = ec.Exercise_contents_code) reps
			FROM exercise_title et JOIN exercise_item ei 
				JOIN exercise_contents ec
					ON et.Exercise_title_code = ec.Exercise_title_code 
					AND et.Exercise_code = ei.exercise_code
			WHERE ei.id = #{id}
<!-- 			GROUP BY ei.Exercise_date,et.Exercise_name  -->
			) mytable
		GROUP BY mytable.Exercise_date,mytable.Exercise_name 
		ORDER BY mytable.Exercise_date DESC

	
	</select>
	
	<select id="getMetabolism" resultType="besave">
		
	SELECT be_id,username,be_date,b_metabolism,e_requirement
	FROM bedata
	WHERE username=#{username}
	ORDER BY be_id desc limit 1
	
	</select>
	
	<select id="getOverallAvg" resultType="ExerciseJournal">

	SELECT 
		 mytable.Exercise_name
			,ROUND(AVG(mytable.Exercise_lb),1) avgLb,
			ROUND((MAX(mytable.Exercise_lb) * (1+MAX(mytable.reps)/30)),1) oneRm
		FROM (SELECT 
				ei.id,ei.Exercise_date,et.Exercise_name,ec.Exercise_contents_code,
				ec.Exercise_set,ec.Exercise_reps,ec.Exercise_lb,
				(SELECT ab.Exercise_reps FROM exercise_contents ab WHERE ab.exercise_lb = ec.Exercise_lb AND ab.exercise_contents_code = ec.Exercise_contents_code) reps
			FROM exercise_title et JOIN exercise_item ei 
				JOIN exercise_contents ec
					ON et.Exercise_title_code = ec.Exercise_title_code 
					AND et.Exercise_code = ei.exercise_code
					WHERE ei.userWeight BETWEEN 
												(SELECT TRUNCATE(ei.userWeight,-1) minEval FROM exercise_item ei,
													(SELECT MAX(Exercise_date) as recentWeight FROM exercise_item  GROUP BY id) recentWeightT 
 												WHERE ei.id=#{id} AND ei.Exercise_date = recentWeightT.recentWeight ORDER BY minEval limit 1) 
													 AND 
 												(SELECT TRUNCATE(ei.userWeight,-1)+9 maxEval FROM exercise_item ei,
														(SELECT MAX(Exercise_date) as recentWeight FROM exercise_item  GROUP BY id) recentWeightT 
 												WHERE ei.id=#{id} AND ei.Exercise_date = recentWeightT.recentWeight ORDER BY maxEval limit 1)
<!-- 					GROUP BY ei.Exercise_date,et.Exercise_name,ei.id -->
		) mytable,(SELECT MAX(Exercise_date) as recently FROM exercise_item GROUP BY exercise_item.id) recentTable
		WHERE mytable.Exercise_date = recentTable.recently
		GROUP BY mytable.Exercise_name
	</select>
	
<select id="mentiInfo" resultType="TrainerProfile">
	SELECT tp.username,tp.name,tp.sex,tp.career,tp.pro_date,tp.up_filename,region,tier
	FROM trainer_profile tp,user_management um,user u
	WHERE tp.username = um.manager AND u.username = um.manager AND um.username = #{id}
</select>
<insert id="doneSubject">
	INSERT INTO assignment_log(manager,username,done_subject,done_content,kinds,log_time)
	VALUES (#{manager},#{id},#{subject},#{contents},#{subjectKind},now())
	
</insert>
<select id="getMyDailyRanking" resultType="DailyRank">
	SELECT username,point,menti,rank,ranking,func,save_date
	FROM daily_rank
	WHERE username = #{id}
	GROUP BY save_date
	ORDER BY save_date DESC	
	LIMIT 10
</select>
<insert id="addExerPlan" parameterType="Planner">
	INSERT INTO do_planner (do_date,do_name,do_set,do_reps,do_lb,do_goal,do_part,do_etc,manager,username)
	VALUES 
	<foreach collection="doList" item="item" separator=",">
	(#{item.doDate},#{item.doName},#{item.doSet},#{item.doReps},#{item.doLb},#{item.doGoal},#{item.doPart},#{item.doEtc},#{item.manager},#{item.username})
	</foreach>
	
	
</insert>
<insert id="addFoodPlan" parameterType="Planner">
	INSERT INTO eat_planner (eat_date,eat_name,eat_gram,eat_count,eat_kcal,eat_etc,eat_nutrient,eat_time,manager,username)
<!-- 	VALUES (#{eatList.eatDate},#{eatList.eatName},#{eatList.eatGram},#{eatList.eatCount},#{eatList.eatKcal},#{eatList.eatEtc},#{eatList.Nutrient},#{eatList.eatTime},#{eatList.manager},#{eatList.username}) -->
	VALUES 
	<foreach collection="eatList" item="item" separator=",">
	(#{item.eatDate},#{item.eatName},#{item.eatGram},#{item.eatCount},#{item.eatKcal},#{item.eatEtc},#{item.eatNutrient},#{item.eatTime},#{item.manager},#{item.username})
	</foreach>
	
</insert>

<select id="typeOfExercise" resultType="TypeOfExercise">
	SELECT te_name, replace(te_img,"\\","\\\\") te_img FROM type_of_exercise
</select>

<select id="getDoList" resultType="DoPlanner">
	SELECT do_num,do_date,do_name,do_set,do_reps,do_lb,do_goal,do_part,do_etc,manager,username FROM do_planner 
	WHERE username = #{id} AND STR_TO_DATE(do_date, "%Y.%m.%d") = curdate()
</select>

<select id="getEatList" resultType="EatPlanner">
	SELECT eat_num,eat_date,eat_name,eat_gram,eat_count,eat_gram,eat_Kcal,eat_etc,eat_nutrient,eat_time,manager,eat_planner.username,IFNULL(b.e_requirement,0) need_kcal  
	FROM eat_planner left outer join (SELECT be_id,be_date,e_requirement,username FROM bedata WHERE username=#{id} ORDER BY be_id DESC limit 1) as b  on (b.username = eat_planner.username)
	WHERE eat_planner.username = #{id} AND STR_TO_DATE(eat_date, "%Y.%m.%d") = curdate()
</select>
<select id="getAjaxDoList" resultType="DoPlanner">
	SELECT do_num,do_date,do_name,do_set,do_reps,do_lb,do_goal,do_part,do_etc,manager,username FROM do_planner 
	WHERE username = #{id} AND do_date = STR_TO_DATE(substring(#{date},1,10), "%Y.%m.%d")
</select>
<select id="getAjaxEatList" resultType="EatPlanner">
	SELECT eat_num,eat_date,eat_name,eat_gram,eat_count,eat_gram,eat_Kcal,eat_etc,eat_nutrient,eat_time,manager,eat_planner.username,IFNULL(b.e_requirement,0) need_kcal 
	FROM eat_planner left outer join (SELECT be_id,be_date,e_requirement,username FROM bedata WHERE username=#{id} ORDER BY be_id DESC limit 1) as b  on (b.username = eat_planner.username)
	WHERE eat_planner.username = #{id} AND eat_date = STR_TO_DATE(substring(#{date},1,10), "%Y.%m.%d")  
</select>
<insert id="saveScore">
insert into star_rate (mento,menti,is_eval,score)
values(#{mento},#{userName},1,#{score})
</insert>
<select id="countScore" resultType="Integer">
select count(*) from star_rate where mento = #{mento} and menti = #{userName};
</select>
</mapper>