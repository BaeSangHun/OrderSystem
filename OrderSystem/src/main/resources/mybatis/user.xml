<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user">
	<!-- 운동일지에 뿌려주는 운동리스트 -->
	<select id="typeOfExercise" resultType="TypeOfExercise">
		select te_name,te_set,te_reps,te_tool from type_of_exercise
	</select>
	<!-- 트레이너 신청 -->
	<insert id="promotion" parameterType="TrainerProfile">
		insert into trainer_profile (apply_num, username, name, sex, career, apply_date, profile)
		values((select ifnull(max(b.apply_num) + 1,1) from trainer_profile b),#{username},#{name},#{sex},#{career}, NOW(), #{profile})
	</insert>
	<!-- 트레이너신청 리스트 -->
	<select id="proList" resultType="TrainerProfile">
		select * from trainer_profile
	</select>
	<!-- 트레이너 승인 -->
	<update id="grant" parameterType="TrainerProfile">
		update user set authority = 'trainer' where username = #{username}
		updata user set addmission = '승인' where username = #{username}
	</update>
	
	<select id="select" resultType="UserVO">
		select * from user where username
		= #{username}
	</select>

	<select id="login" resultType="UserVO">
		select username,password,authority from user where
		username=#{username} and
		password=#{password}
	</select>

	<select id="list" resultType="UserVO">
		select username from user
	</select>

	<select id="item" resultType="UserVO">
		select * from user where
		username=#{username}
	</select>

	<insert id="add" parameterType="UserVO">
		insert into user(username,
		password, authority)
		values(#{username}, #{password},"user")
	</insert>

	<!-- <update id="update"> -->
	<!-- update user set id=#{id}, pw=#{pw}, -->
	<!-- nicname=#{nicname} -->
	<!-- </update> -->

	<delete id="delete">
		delete from member where id=#{id}
	</delete>
	<!-- 운동일지 제목 입력 -->
	<insert id="saveCode">
		insert into exercise_item (id,Exercise_date,title,userWeight)
		values(#{id},#{ExerciseDate},#{title},#{userWeight})
	</insert>
	<!-- 운동일지 운동 종목 입력 -->
	<insert id="saveTitle">
		insert into
		exercise_title(Exercise_code,Exercise_name)
		values((select
		ifnull(max(exercise_code),0) from exercise_item),#{ExerciseName})
	</insert>
	<!-- 운동일지 운동 횟수 입력 -->
	<insert id="saveContents" parameterType="java.util.HashMap">
		insert into
		exercise_contents(Exercise_title_code,Exercise_set,Exercise_reps,Exercise_lb)
		values((select ifnull(max(Exercise_title_code),0) from
		exercise_title),${ExerciseSet},${ExerciseReps},${ExerciseLb})
	</insert>
	<!-- 운동일지 사용자에 맞는 제목 출력 -->
	<select id="exerciseJournal" resultType="ExerciseJournal">
		select distinct
		ei.Exercise_code,ei.exercise_date as start,ei.title, ei.userWeight, et.Exercise_name,
		ec.Exercise_set, ec.Exercise_reps, ec.Exercise_lb
		from exercise_item ei, exercise_title et, exercise_contents ec
		where ei.Exercise_code=et.Exercise_code and et.Exercise_title_code=ec.Exercise_title_code
		 and id = #{id}
	</select>
	<!-- <resultMap type="ExerciseJournal" id="EJMap"> -->
	<!-- <id property="ExerciseCode" column="Exercise_code"></id> -->
	<!-- <result property="ExerciseName" column="Exercise_name"/> -->
	<!-- <collection property="details" ofType="ExerciseContents" javaType="ArrayList"> -->
	<!-- <result property="ExerciseSet" column="Exercise_set"/> -->
	<!-- <result property="ExerciseReps" column="Exercise_reps"/> -->
	<!-- <result property="ExerciseLb" column="Exercise_lb"/> -->
	<!-- </collection> -->
	<!-- </resultMap> -->



		<resultMap type="ExerciseContents" id="ExerciseContents">
		<result property="ExerciseContentsCode"
			column="Exercise_contents_code" />
		<result property="ExerciseSet" column="Exercise_set" />
		<result property="ExerciseReps" column="Exercise_reps" />
		<result property="ExerciseLb" column="Exercise_lb" />
	</resultMap>

	<resultMap type="ExerciseJournal" id="EJMapOne">
		<id property="ExerciseCode" column="Exercise_code"></id>
		<result property="ExerciseName" column="Exercise_name" />
		<collection property="details"
			resultMap="ExerciseContents" />
	</resultMap>

	<!-- 운동일지 클릭한 내용 출력 -->
	<select id="exerciseJournalOne" parameterType="Integer"
		resultMap="EJMapOne">
		select
		et.Exercise_name,ec.Exercise_contents_code,
		ec.Exercise_set,ec.Exercise_reps,ec.Exercise_lb
		from exercise_title et
		join exercise_contents ec
		on et.Exercise_title_code =
		ec.Exercise_title_code
		where et.Exercise_code = #{exerciseCode}	
	</select>

	<resultMap type="ExerciseContents" id="ExerciseContentsU">
		<result property="ExerciseContentsCode"
			column="Exercise_contents_code" />
		<result property="ExerciseSet" column="Exercise_set" />
		<result property="ExerciseReps" column="Exercise_reps" />
		<result property="ExerciseLb" column="Exercise_lb" />
	</resultMap>

	<resultMap type="ExerciseJournal" id="EJUMap">
		<id property="ExerciseCode" column="Exercise_code"></id>
		<result property="ExerciseName" column="Exercise_name" />
		<collection property="details"
			resultMap="ExerciseContentsU" />
	</resultMap>
	<select id="exerciseJournalUpdate" resultMap="EJUMap">
		select
		et.Exercise_name,ec.Exercise_contents_code,
		ec.Exercise_set,ec.Exercise_reps,ec.Exercise_lb
		from exercise_title et
		join exercise_contents ec
		on et.Exercise_title_code =
		ec.Exercise_title_code
		where et.Exercise_code = #{exerciseCode}
	</select>
	<!-- 수정처리 -->
	<update id="exerciseJournalUpdateSubmit">
		update exercise_contents
		set Exercise_reps =
		#{ExerciseReps},
		Exercise_lb = #{ExerciseLb}
		where
		Exercise_contents_code = #{ExerciseContentsCode}
	</update>

	<!-- 운동일지 삭제처리 -->
	<delete id="exerciseJournalDel">
		delete from exercise_item where Exercise_code =
		#{ExerciseCode}
	</delete>
<!-- 	기초정보 있나 확인 -->
	<insert id="basicInformation" parameterType="basicInformation">
		insert into user_basic_information(username,age,sex,height,weight,drinking,frequency,purpose,job,dictum)
		value(#{username},#{age},#{sex},#{height},#{weight},#{drinking},#{frequency},#{purpose},#{job},#{dictum})
	</insert>
<!-- 	아이디 중복확인 -->
	<select id="idChk" resultType="Integer">
		select count(*) from user where username=#{username}
	</select>
<!-- 	로그인시 아이디 비번확인 -->
	<select id="LoginChk" resultType="Integer">
		select count(*) from user where username=#{username} and password=#{password}
	</select>
</mapper>